---
import { ViewTransitions } from "astro:transitions";

function getRelativeUrl(path: string) {
  return import.meta.env.BASE_URL + "/nav-transition/" + path;
}

export function getStaticPaths() {
  const navItems = [
    {
      name: "Home",
      link: "home",
    },
    {
      name: "About",
      link: "about",
    },
    {
      name: "Contact",
      link: "contact",
    },
  ];

  return navItems.map((item) => {
    return { params: { nav: item.link }, props: { navItems } };
  });
}

const { nav } = Astro.params;
const { navItems } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Animated Nav</title>
    <ViewTransitions />
  </head>
  <body>
    <nav>
      <ul>
        {
          navItems.map((item, i) => (
            <li class={nav === item.link ? "active" : ""}>
              <a
                href={getRelativeUrl(item.link)}
                style={`view-transition-name: navLink${i}`}
              >
                {item.name}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
    <main>
      <h1>Animated Navigation</h1>
      <p>
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Quod, pariatur
        ducimus quis doloribus sed enim earum accusantium quaerat, tempora
        distinctio obcaecati laboriosam dignissimos dolores tenetur ipsum
        voluptate error dolorem. Dolore?
      </p>
      <p>
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore quaerat
        laudantium neque tempora illum nobis culpa facere deserunt? Non mollitia
        exercitationem impedit debitis magnam illo tempore error ducimus
        explicabo? Consequuntur.
      </p>
      <p>
        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Ullam nam
        eaque repellat, accusantium eveniet assumenda dolore quidem quibusdam
        consequuntur ipsum consectetur aliquam provident pariatur asperiores
        dolores recusandae quia labore necessitatibus.
      </p>
    </main>
    <style>
      :root {
        --c1: #8ecae6;
        --c2: #219ebc;
        --c3: #023047;
        --c4: #ffb703;
        --c5: #cd6d00;

        --text-color: black;
        --text-color-dark: white;
        --bg-color: var(--c3);
        --nav-bg-color: var(--c5);
      }

      html {
        font-family: ui-rounded, "Hiragino Maru Gothic ProN", Quicksand,
          Comfortaa, Manjari, "Arial Rounded MT", "Arial Rounded MT Bold",
          Calibri, source-sans-pro, sans-serif;
        font-weight: normal;
        font-size: 1.2em;
        line-height: 1.6em;
      }

      * {
        box-sizing: border-box;
      }

      body {
        padding: 0;
        margin: 0;
        min-height: 100svh;

        display: grid;
        grid-template-columns: min(14rem, 100%) 1fr;
      }

      main {
        background-color: var(--bg-color);
        padding: 4rem;
        color: var(--text-color-dark);
      }

      nav {
        background-color: var(--nav-bg-color);
        color: var(--text-color-dark);
      }

      ul {
        list-style: none;
        padding: 0;
        margin: 0;

        margin-top: 2rem;
        margin-left: 2rem;
        display: grid;
        gap: 0.5rem;
        /* align-items: center; */
      }

      li {
        text-align: center;
        padding: 0.7em;
        position: relative;
      }

      li.active {
        view-transition-name: activeNavTab;
        background-color: var(--bg-color);
        border-radius: 100vh 0 0 100vh;
      }

      li.active::before,
      li.active::after {
        --_radius-size: 1.4rem;
        content: "";
        position: absolute;
        background-color: var(--nav-bg-color);
        width: var(--_radius-size);
        height: var(--_radius-size);
        border-radius: var(--_radius-size);
        right: 0;
      }

      li.active::before {
        top: 0;
        transform: translateY(calc(var(--_radius-size) * -1));
        border-radius: 0 0 var(--_radius-size) 0;
        /* box-shadow: 0.7rem 0.7rem 0 0.7rem red; */
        box-shadow: 0.9rem 0.9rem 0 0.8rem var(--bg-color);
      }

      li.active::after {
        bottom: 0;
        transform: translateY(var(--_radius-size));
        border-radius: 0 var(--_radius-size) 0 0;
        box-shadow: 0.9rem -0.9rem 0 0.8rem var(--bg-color);
      }

      a {
        text-decoration: none;
        color: inherit;
        z-index: 10;
        position: relative;
      }
    </style>

    <style is:inline>
      ::view-transition-group(activeNavTab) {
        animation-duration: 500ms;
      }
    </style>
  </body>
</html>
